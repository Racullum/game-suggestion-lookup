{"ast":null,"code":"import fetch from \"cross-fetch\";\nexport var SEARCH_FOR_GAME = \"SEARCH_FOR_GAME\";\nexport var searchForGame = function searchForGame(text) {\n  return {\n    type: SEARCH_FOR_GAME,\n    text: text\n  };\n};\nexport var RECEIVE_GAME = \"RECEIVE_GAME\";\nexport var receiveGame = function receiveGame(json) {\n  return {\n    type: RECEIVE_GAME,\n    json: json\n  };\n};\nexport var UPDATE_INPUT_VALUE = \"UPDATE_INPUT_VALUE\";\nexport var updateInputValue = function updateInputValue(value) {\n  return {\n    type: UPDATE_INPUT_VALUE,\n    inputValue: value\n  };\n};\nexport var UPDATE_ACTIVE_GAME = \"UPDATE_ACTIVE_GAME\";\nexport var updateActiveGame = function updateActiveGame(id) {\n  return {\n    type: UPDATE_ACTIVE_GAME,\n    activeGameId: id\n  };\n};\nexport var UPDATE_SEARCHED_GAME = \"UPDATE_SEARCHED_GAME\";\nexport var updateSearchedGame = function updateSearchedGame(game) {\n  return {\n    type: UPDATE_SEARCHED_GAME,\n    searchedGame: game\n  };\n}; // Fetch a single game\n\nfunction getGame(gameName) {\n  return fetch('api/games', {\n    method: \"post\",\n    body: 'fields name, similar_games; where name ~\"' + gameName + '\";',\n    headers: {\n      \"Content-Type\": \"text/plain\"\n    }\n  }).then(function (response) {\n    return response.json();\n  }, function (error) {\n    return console.log(\"An error occurred.\", error);\n  }).then(function (json) {\n    return json[0];\n  });\n} // Returns array of games that are similar to input game\n\n\nfunction fetchSuggestedGames(game) {\n  return fetch(\"/api/games\", {\n    method: \"post\",\n    body: \"fields name, summary, cover; where id=(\" + game.similar_games.join(\", \") + \");\",\n    headers: {\n      \"Content-Type\": \"text/plain\"\n    }\n  }).then(function (response) {\n    return response.json();\n  }, function (error) {\n    return console.log(\"An error occurred.\", error);\n  }).then(function (json) {\n    return json;\n  });\n} // Calls the functions responsible for providing our state its info\n\n\nexport function fetchGame(gameName) {\n  return function (dispatch) {\n    dispatch(searchForGame(gameName));\n    getGame(gameName).then(function (json) {\n      if (undefined === json) {\n        alert(\"Could not find \" + \"'\" + gameName + \"'\");\n      } else {\n        dispatch(updateSearchedGame(json.name));\n        fetchSuggestedGames(json).then(function (json) {\n          dispatch(receiveGame(json));\n        });\n      }\n    });\n  };\n}","map":{"version":3,"sources":["/mnt/c/Users/Ryan/Documents/game-suggestion-lookup/client/src/actions/index.js"],"names":["fetch","SEARCH_FOR_GAME","searchForGame","text","type","RECEIVE_GAME","receiveGame","json","UPDATE_INPUT_VALUE","updateInputValue","value","inputValue","UPDATE_ACTIVE_GAME","updateActiveGame","id","activeGameId","UPDATE_SEARCHED_GAME","updateSearchedGame","game","searchedGame","getGame","gameName","method","body","headers","then","response","error","console","log","fetchSuggestedGames","similar_games","join","fetchGame","dispatch","undefined","alert","name"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;AAEA,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI;AAAA,SAAK;AACpCC,IAAAA,IAAI,EAAEH,eAD8B;AAEpCE,IAAAA,IAAI,EAAJA;AAFoC,GAAL;AAAA,CAA1B;AAKP,OAAO,IAAME,YAAY,GAAG,cAArB;AACP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI;AAAA,SAAK;AAClCH,IAAAA,IAAI,EAAEC,YAD4B;AAElCE,IAAAA,IAAI,EAAJA;AAFkC,GAAL;AAAA,CAAxB;AAKP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK,EAAI;AACvC,SAAO;AACLN,IAAAA,IAAI,EAAEI,kBADD;AAELG,IAAAA,UAAU,EAAED;AAFP,GAAP;AAID,CALM;AAOP,OAAO,IAAME,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,EAAE,EAAI;AACpC,SAAO;AACLV,IAAAA,IAAI,EAAEQ,kBADD;AAELG,IAAAA,YAAY,EAAED;AAFT,GAAP;AAID,CALM;AAOP,OAAO,IAAME,oBAAoB,GAAG,sBAA7B;AACP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,IAAI,EAAI;AACxC,SAAO;AACLd,IAAAA,IAAI,EAAEY,oBADD;AAELG,IAAAA,YAAY,EAAED;AAFT,GAAP;AAID,CALM,C,CAOP;;AACA,SAASE,OAAT,CAAiBC,QAAjB,EAA2B;AACzB,SAAOrB,KAAK,CAAC,WAAD,EAAc;AACxBsB,IAAAA,MAAM,EAAE,MADgB;AAExBC,IAAAA,IAAI,EAAE,8CAA8CF,QAA9C,GAAwD,IAFtC;AAGxBG,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAHe,GAAd,CAAL,CAOJC,IAPI,CAQH,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACnB,IAAT,EAAJ;AAAA,GARL,EAUH,UAAAoB,KAAK;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,KAAlC,CAAJ;AAAA,GAVF,EAYJF,IAZI,CAYC,UAAAlB,IAAI,EAAI;AACZ,WAAOA,IAAI,CAAC,CAAD,CAAX;AACD,GAdI,CAAP;AAeD,C,CAED;;;AACA,SAASuB,mBAAT,CAA6BZ,IAA7B,EAAmC;AACjC,SAAOlB,KAAK,CAAC,YAAD,EAAe;AACzBsB,IAAAA,MAAM,EAAE,MADiB;AAEzBC,IAAAA,IAAI,EACF,4CACAL,IAAI,CAACa,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CADA,GAEA,IALuB;AAMzBR,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AANgB,GAAf,CAAL,CAUJC,IAVI,CAWH,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACnB,IAAT,EAAJ;AAAA,GAXL,EAaH,UAAAoB,KAAK;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,KAAlC,CAAJ;AAAA,GAbF,EAeJF,IAfI,CAeC,UAAAlB,IAAI,EAAI;AACZ,WAAOA,IAAP;AACD,GAjBI,CAAP;AAkBD,C,CAED;;;AACA,OAAO,SAAS0B,SAAT,CAAmBZ,QAAnB,EAA6B;AAClC,SAAO,UAASa,QAAT,EAAmB;AACxBA,IAAAA,QAAQ,CAAChC,aAAa,CAACmB,QAAD,CAAd,CAAR;AACAD,IAAAA,OAAO,CAACC,QAAD,CAAP,CAAkBI,IAAlB,CAAuB,UAAAlB,IAAI,EAAI;AAC7B,UAAI4B,SAAS,KAAK5B,IAAlB,EAAwB;AACtB6B,QAAAA,KAAK,CAAC,oBAAoB,GAApB,GAA0Bf,QAA1B,GAAqC,GAAtC,CAAL;AACD,OAFD,MAEO;AACLa,QAAAA,QAAQ,CAACjB,kBAAkB,CAACV,IAAI,CAAC8B,IAAN,CAAnB,CAAR;AACAP,QAAAA,mBAAmB,CAACvB,IAAD,CAAnB,CAA0BkB,IAA1B,CAA+B,UAAAlB,IAAI,EAAI;AACrC2B,UAAAA,QAAQ,CAAC5B,WAAW,CAACC,IAAD,CAAZ,CAAR;AACD,SAFD;AAGD;AACF,KATD;AAUD,GAZD;AAaD","sourcesContent":["import fetch from \"cross-fetch\";\r\n\r\nexport const SEARCH_FOR_GAME = \"SEARCH_FOR_GAME\";\r\nexport const searchForGame = text => ({\r\n  type: SEARCH_FOR_GAME,\r\n  text\r\n});\r\n\r\nexport const RECEIVE_GAME = \"RECEIVE_GAME\";\r\nexport const receiveGame = json => ({\r\n  type: RECEIVE_GAME,\r\n  json\r\n});\r\n\r\nexport const UPDATE_INPUT_VALUE = \"UPDATE_INPUT_VALUE\";\r\nexport const updateInputValue = value => {\r\n  return {\r\n    type: UPDATE_INPUT_VALUE,\r\n    inputValue: value\r\n  };\r\n};\r\n\r\nexport const UPDATE_ACTIVE_GAME = \"UPDATE_ACTIVE_GAME\";\r\nexport const updateActiveGame = id => {\r\n  return {\r\n    type: UPDATE_ACTIVE_GAME,\r\n    activeGameId: id\r\n  };\r\n};\r\n\r\nexport const UPDATE_SEARCHED_GAME = \"UPDATE_SEARCHED_GAME\";\r\nexport const updateSearchedGame = game => {\r\n  return {\r\n    type: UPDATE_SEARCHED_GAME,\r\n    searchedGame: game\r\n  };\r\n};\r\n\r\n// Fetch a single game\r\nfunction getGame(gameName) {\r\n  return fetch('api/games', {\r\n    method: \"post\",\r\n    body: 'fields name, similar_games; where name ~\"' + gameName+ '\";',\r\n    headers: {\r\n      \"Content-Type\": \"text/plain\"\r\n    }\r\n  })\r\n    .then(\r\n      response => response.json(),\r\n\r\n      error => console.log(\"An error occurred.\", error)\r\n    )\r\n    .then(json => {\r\n      return json[0];\r\n    });\r\n}\r\n\r\n// Returns array of games that are similar to input game\r\nfunction fetchSuggestedGames(game) {\r\n  return fetch(\"/api/games\", {\r\n    method: \"post\",\r\n    body:\r\n      \"fields name, summary, cover; where id=(\" +\r\n      game.similar_games.join(\", \") +\r\n      \");\",\r\n    headers: {\r\n      \"Content-Type\": \"text/plain\"\r\n    }\r\n  })\r\n    .then(\r\n      response => response.json(),\r\n\r\n      error => console.log(\"An error occurred.\", error)\r\n    )\r\n    .then(json => {\r\n      return json;\r\n    });\r\n}\r\n\r\n// Calls the functions responsible for providing our state its info\r\nexport function fetchGame(gameName) {\r\n  return function(dispatch) {\r\n    dispatch(searchForGame(gameName));\r\n    getGame(gameName).then(json => {\r\n      if (undefined === json) {\r\n        alert(\"Could not find \" + \"'\" + gameName + \"'\");\r\n      } else {\r\n        dispatch(updateSearchedGame(json.name));\r\n        fetchSuggestedGames(json).then(json => {\r\n          dispatch(receiveGame(json));\r\n        });\r\n      }\r\n    });\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}