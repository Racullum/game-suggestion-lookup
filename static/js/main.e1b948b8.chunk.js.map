{"version":3,"sources":["actions/index.js","reducers/index.js","components/GameName.js","components/Summary.js","components/Image.js","containers/ImageContainer.js","utils/images.js","containers/GameContainer.js","containers/GameSearchBar.js","containers/SuggestionGameContainer.js","containers/SuggestionsContainer.js","components/App.js","index.js"],"names":["searchForGame","text","type","receiveGame","json","updateSearchedGame","game","searchedGame","fetchGame","gameName","dispatch","fetch","process","mode","method","body","headers","user-key","then","response","error","console","log","getGame","undefined","alert","name","similar_games","join","initialState","activeGameId","suggestedGames","isFetching","inputValue","suggestionApp","state","arguments","length","action","Object","assign","id","GameName","_ref","react_default","a","createElement","Summary","summary","Image","imgUrl","onClick","src","alt","ImageContainer","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","generateImageUrlFromCoverId","bind","assertThisInitialized","coverId","size","coverIds","_this2","setState","image_id","prevProps","components_Image","React","Component","connect","findActiveGame","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","err","return","activeGame","className","containers_ImageContainer","cover","components_GameName","components_Summary","suggestions","input","onSubmit","e","preventDefault","trim","ref","node","placeholder","suggestedGame","map","key","containers_SuggestionGameContainer","containers_GameContainer","containers_SuggestionsContainer","containers_GameSearchBar","store","createStore","applyMiddleware","thunkMiddleware","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.e1b948b8.chunk.js","sourcesContent":["import fetch from \"cross-fetch\";\r\n\r\nexport const SEARCH_FOR_GAME = \"SEARCH_FOR_GAME\";\r\nexport const searchForGame = text => ({\r\n  type: SEARCH_FOR_GAME,\r\n  text\r\n});\r\n\r\nexport const RECEIVE_GAME = \"RECEIVE_GAME\";\r\nexport const receiveGame = json => ({\r\n  type: RECEIVE_GAME,\r\n  json\r\n});\r\n\r\nexport const UPDATE_INPUT_VALUE = \"UPDATE_INPUT_VALUE\";\r\nexport const updateInputValue = value => {\r\n  return {\r\n    type: UPDATE_INPUT_VALUE,\r\n    inputValue: value\r\n  };\r\n};\r\n\r\nexport const UPDATE_ACTIVE_GAME = \"UPDATE_ACTIVE_GAME\";\r\nexport const updateActiveGame = id => {\r\n  return {\r\n    type: UPDATE_ACTIVE_GAME,\r\n    activeGameId: id\r\n  };\r\n};\r\n\r\nexport const UPDATE_SEARCHED_GAME = \"UPDATE_SEARCHED_GAME\";\r\nexport const updateSearchedGame = game => {\r\n  return {\r\n    type: UPDATE_SEARCHED_GAME,\r\n    searchedGame: game\r\n  };\r\n};\r\n\r\n// Fetch a single game\r\nfunction getGame(gameName) {\r\n  return fetch(process.env.REACT_APP_API_URL + \"games\", {\r\n    mode: \"no-cors\",\r\n    method: \"post\",\r\n    body: 'fields name, similar_games; where name ~\"' + gameName + '\";',\r\n    headers: {\r\n      \"user-key\": process.env.REACT_APP_API_KEY\r\n    }\r\n  })\r\n    .then(\r\n      response => response.json(),\r\n\r\n      error => console.log(\"An error occurred.\", error)\r\n    )\r\n    .then(json => {\r\n      return json[0];\r\n    });\r\n}\r\n\r\n// Returns array of games that are similar to input game\r\nfunction fetchSuggestedGames(game) {\r\n  return fetch(process.env.REACT_APP_API_URL + \"games\", {\r\n    mode: \"no-cors\",\r\n    method: \"post\",\r\n    body:\r\n      \"fields name, summary, cover; where id=(\" +\r\n      game.similar_games.join(\", \") +\r\n      \");\",\r\n    headers: {\r\n      \"user-key\": process.env.REACT_APP_API_KEY\r\n    }\r\n  })\r\n    .then(\r\n      response => response.json(),\r\n\r\n      error => console.log(\"An error occurred.\", error)\r\n    )\r\n    .then(json => {\r\n      return json;\r\n    });\r\n}\r\n\r\n// Calls the functions responsible for providing our state its info\r\nexport function fetchGame(gameName) {\r\n  return function(dispatch) {\r\n    dispatch(searchForGame(gameName));\r\n    getGame(gameName).then(json => {\r\n      if (undefined === json) {\r\n        alert(\"Could not find \" + \"'\" + gameName + \"'\");\r\n      } else {\r\n        dispatch(updateSearchedGame(json.name));\r\n        fetchSuggestedGames(json).then(json => {\r\n          dispatch(receiveGame(json));\r\n        });\r\n      }\r\n    });\r\n  };\r\n}\r\n","import {\r\n  SEARCH_FOR_GAME,\r\n  RECEIVE_GAME,\r\n  UPDATE_INPUT_VALUE,\r\n  UPDATE_SEARCHED_GAME,\r\n  UPDATE_ACTIVE_GAME\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  activeGameId: 0,\r\n  suggestedGames: [],\r\n  isFetching: false,\r\n  searchedGame: \"\",\r\n  inputValue: \"\"\r\n};\r\n\r\nconst suggestionApp = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEARCH_FOR_GAME:\r\n      return Object.assign({}, state, {\r\n        isFetching: true\r\n      });\r\n    case UPDATE_INPUT_VALUE:\r\n      return Object.assign({}, state, {\r\n        inputValue: action.inputValue\r\n      });\r\n    case UPDATE_ACTIVE_GAME:\r\n      return Object.assign({}, state, {\r\n        activeGameId: action.activeGameId\r\n      });\r\n    case UPDATE_SEARCHED_GAME:\r\n      return Object.assign({}, state, {\r\n        searchedGame: action.searchedGame\r\n      });\r\n    case RECEIVE_GAME:\r\n      return Object.assign({}, state, {\r\n        isFetching: false,\r\n        suggestedGames: action.json,\r\n        activeGameId: action.json[0].id\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default suggestionApp;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../css/GameContainer.css\";\r\n\r\nconst GameName = ({ gameName }) => <h1>{gameName}</h1>;\r\n\r\nGameName.propTypes = {\r\n  gameName: PropTypes.string.isRequired\r\n};\r\n\r\nexport default GameName;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Summary = ({ summary }) => <p>{summary}</p>;\r\n\r\nSummary.propTypes = {\r\n  summary: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Summary;\r\n","import React from \"react\";\r\nimport \"../css/Image.css\";\r\n\r\nconst Image = ({ imgUrl, onClick }) => (\r\n  <img src={imgUrl} onClick={onClick} alt={imgUrl} />\r\n);\r\n\r\nexport default Image;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Image from \"../components/Image\";\r\nimport \"../css/ImageContainer.css\";\r\nimport { generateImageUrl } from \"../utils/images\";\r\n\r\nclass ImageContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      imgUrl: \"\" // default sort param\r\n    };\r\n\r\n    this.generateImageUrlFromCoverId = this.generateImageUrlFromCoverId.bind(\r\n      this\r\n    );\r\n  }\r\n\r\n  // Generates a single url from a cover id of a single game\r\n  generateImageUrlFromCoverId(coverId, size) {\r\n    generateImageUrl(coverId).then(json => {\r\n      this.setState({\r\n        imgUrl:\r\n          \"//images.igdb.com/igdb/image/upload/t_\" +\r\n          size +\r\n          \"/\" +\r\n          json[0].image_id +\r\n          \".jpg\"\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.generateImageUrlFromCoverId(this.props.coverId, this.props.size);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.coverId != prevProps.coverId) {\r\n      this.generateImageUrlFromCoverId(this.props.coverId, this.props.size);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <Image imgUrl={this.state.imgUrl} onClick={this.props.onClick} />;\r\n  }\r\n}\r\n\r\nImageContainer.propTypes = {\r\n  coverId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default connect()(ImageContainer);\r\n","import fetch from \"cross-fetch\";\r\n\r\nexport function generateImageUrl(coverIds) {\r\n  return fetch(process.env.REACT_APP_API_URL + \"covers\", {\r\n    mode: \"no-cors\",\r\n    method: \"post\",\r\n    body: \"fields image_id; where id=(\" + coverIds + \");\",\r\n    headers: {\r\n      \"user-key\": process.env.REACT_APP_API_KEY\r\n    }\r\n  })\r\n    .then(\r\n      response => response.json(),\r\n\r\n      error => console.log(\"An error occurred.\", error)\r\n    )\r\n    .then(json => {\r\n      return json;\r\n    });\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport React from \"react\";\r\nimport \"../css/GameContainer.css\";\r\nimport GameName from \"../components/GameName\";\r\nimport Summary from \"../components/Summary\";\r\nimport ImageContainer from \"./ImageContainer\";\r\n\r\nconst mapStateToProps = state => ({\r\n  activeGame: findActiveGame(state.activeGameId, state.suggestedGames)\r\n});\r\n\r\n// Compare the list of suggested game id values to our activeGameId\r\nfunction findActiveGame(id, suggestedGames) {\r\n  for (let game of suggestedGames) {\r\n    if (game.id == id) {\r\n      return game;\r\n    }\r\n  }\r\n}\r\n\r\nconst GameContainer = ({ activeGame }) => {\r\n  return (\r\n    <div className=\"game-container\">\r\n      <div className=\"GameContainer-ActiveImageContainer\">\r\n        <ImageContainer coverId={activeGame.cover} size=\"cover_big\" />\r\n      </div>\r\n\r\n      <div className=\"text\">\r\n        <GameName gameName={activeGame.name} />\r\n        <hr />\r\n        <Summary summary={activeGame.summary} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps)(GameContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchGame } from \"../actions\";\r\nimport \"../css/GameSearchBar.css\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    suggestions: state.suggestions,\r\n    isFetching: state.isFetching,\r\n    inputValue: state.inputValue\r\n  };\r\n};\r\n\r\nconst GameSearchBar = ({ dispatch }) => {\r\n  let input;\r\n\r\n  return (\r\n    <div>\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          if (!input.value.trim()) {\r\n            return;\r\n          }\r\n          dispatch(fetchGame(input.value));\r\n          input.value = \"\";\r\n        }}\r\n      >\r\n        <div className=\"Search\">\r\n          <input\r\n            type=\"text\"\r\n            ref={node => (input = node)}\r\n            placeholder=\"Search...\"\r\n          />\r\n          <button type=\"submit\">\r\n            <i className=\"fa fa-search\" />\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps)(GameSearchBar);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateActiveGame } from \"../actions\";\r\nimport ImageContainer from \"./ImageContainer\";\r\n\r\nconst SuggestionGameContainer = ({ dispatch, suggestedGame }) => {\r\n  return (\r\n    <ImageContainer\r\n      coverId={suggestedGame.cover}\r\n      onClick={e => dispatch(updateActiveGame(suggestedGame.id))}\r\n      size=\"cover_small\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default connect()(SuggestionGameContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../css/SuggestionsContainer.css\";\r\nimport SuggestionGameContainer from \"../containers/SuggestionGameContainer\";\r\n\r\nconst mapStateToProps = state => ({\r\n  suggestedGames: state.suggestedGames,\r\n  activeGameId: state.activeGameId\r\n});\r\n\r\nconst SuggestionsContainer = ({ suggestedGames, activeGameId }) => {\r\n  const activeSuggestion =\r\n    \"SuggestionsContainer-ActiveSuggestionImageContainer\";\r\n  const nonactiveSuggestion = \"SuggestionsContainer-SuggestionImageContainer\";\r\n\r\n  return (\r\n    <ul>\r\n      {suggestedGames.map(game => (\r\n        <li key={game.id}>\r\n          <div\r\n            className={\r\n              activeGameId == game.id ? activeSuggestion : nonactiveSuggestion\r\n            }\r\n          >\r\n            <SuggestionGameContainer suggestedGame={game} />\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps)(SuggestionsContainer);\r\n","import React from \"react\";\nimport \"../css/App.css\";\nimport GameContainer from \"../containers/GameContainer\";\nimport GameSearchBar from \"../containers/GameSearchBar\";\nimport SuggestionsContainer from \"../containers/SuggestionsContainer\";\nimport { connect } from \"react-redux\";\n\nfunction mapStateToProps(state) {\n  return {\n    searchedGame: state.searchedGame,\n    suggestedGames: state.suggestedGames\n  };\n}\n\nconst App = ({ suggestedGames, searchedGame }) => {\n  return (\n    <div className=\"App\">\n      {suggestedGames.length > 0\n        ? [\n            <div className=\"App-LogoContainer\">\n              <h1>What Should I Play?</h1>\n            </div>,\n            <div className=\"App-GamesContainer\">\n              <GameContainer />\n              <h3>More Games Like {searchedGame} </h3>\n              <SuggestionsContainer />\n            </div>,\n            <div className=\"App-SideBarSearchContainer\">\n              <GameSearchBar />\n            </div>\n          ]\n        : [\n            <div className=\"App-LandingPage\">\n              <h1>What Should I Play?</h1>\n\n              <GameSearchBar />\n            </div>\n          ]}\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(App);\n","import React from \"react\";\nimport { render } from \"react-dom\";\n\n//Provider is a component we wrap our top level component in so that state can \"trickle\" down to the other components\nimport { Provider } from \"react-redux\";\n//Thunk middleware so we can create async action creators\nimport thunkMiddleware from \"redux-thunk\";\n//Create store so we can capture state, applyMiddleware to implement thunk\nimport { createStore, applyMiddleware } from \"redux\";\n\nimport suggestionApp from \"./reducers\";\nimport App from \"./components/App\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport \"./css/index.css\";\n\nconst store = createStore(suggestionApp, applyMiddleware(thunkMiddleware));\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}